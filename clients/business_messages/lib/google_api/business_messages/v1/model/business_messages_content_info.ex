# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BusinessMessages.V1.Model.BusinessMessagesContentInfo do
  @moduledoc """
  Message containing the content information.

  ## Attributes

  *   `altText` (*type:* `String.t`, *default:* `nil`) - Text describing the details about the media for accessibility purposes.
  *   `fileUrl` (*type:* `String.t`, *default:* `nil`) - Publicly reachable URL of the file. The platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL. Maximum 5 MB. Supported content types: image/jpeg, image/jpg, image/png, image/webp
  *   `forceRefresh` (*type:* `boolean()`, *default:* `nil`) - If set, the platform fetches the file and thumbnail from the specified URLs, even if the platform has cached copies of the file (and/or of the thumbnail).
  *   `thumbnailUrl` (*type:* `String.t`, *default:* `nil`) - Optional. Publicly reachable URL of the thumbnail. If you don't provide a thumbnail URL, the platform displays a blank placeholder thumbnail until the user's device downloads the file. Maximum 25 KB. Supported content types: image/jpeg, image/jpg, image/png, image/webp
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :altText => String.t() | nil,
          :fileUrl => String.t() | nil,
          :forceRefresh => boolean() | nil,
          :thumbnailUrl => String.t() | nil
        }

  field(:altText)
  field(:fileUrl)
  field(:forceRefresh)
  field(:thumbnailUrl)
end

defimpl Poison.Decoder, for: GoogleApi.BusinessMessages.V1.Model.BusinessMessagesContentInfo do
  def decode(value, options) do
    GoogleApi.BusinessMessages.V1.Model.BusinessMessagesContentInfo.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BusinessMessages.V1.Model.BusinessMessagesContentInfo do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
