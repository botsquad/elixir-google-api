# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BusinessMessages.V1.Model.BusinessMessagesSuggestion do
  @moduledoc """
  A suggestion within a chip list.

  ## Attributes

  *   `action` (*type:* `GoogleApi.BusinessMessages.V1.Model.BusinessMessagesSuggestedAction.t`, *default:* `nil`) - A suggested action that initiates a native action on the device.
  *   `authenticationRequest` (*type:* `GoogleApi.BusinessMessages.V1.Model.BusinessMessagesAuthenticationRequest.t`, *default:* `nil`) - A request to start authentication flow.
  *   `liveAgentRequest` (*type:* `GoogleApi.BusinessMessages.V1.Model.BusinessMessagesLiveAgentRequest.t`, *default:* `nil`) - A request to have a live agent join the conversation.
  *   `reply` (*type:* `GoogleApi.BusinessMessages.V1.Model.BusinessMessagesSuggestedReply.t`, *default:* `nil`) - A suggestion for the user to reply with specified text.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :action =>
            GoogleApi.BusinessMessages.V1.Model.BusinessMessagesSuggestedAction.t() | nil,
          :authenticationRequest =>
            GoogleApi.BusinessMessages.V1.Model.BusinessMessagesAuthenticationRequest.t() | nil,
          :liveAgentRequest =>
            GoogleApi.BusinessMessages.V1.Model.BusinessMessagesLiveAgentRequest.t() | nil,
          :reply => GoogleApi.BusinessMessages.V1.Model.BusinessMessagesSuggestedReply.t() | nil
        }

  field(:action, as: GoogleApi.BusinessMessages.V1.Model.BusinessMessagesSuggestedAction)

  field(:authenticationRequest,
    as: GoogleApi.BusinessMessages.V1.Model.BusinessMessagesAuthenticationRequest
  )

  field(:liveAgentRequest,
    as: GoogleApi.BusinessMessages.V1.Model.BusinessMessagesLiveAgentRequest
  )

  field(:reply, as: GoogleApi.BusinessMessages.V1.Model.BusinessMessagesSuggestedReply)
end

defimpl Poison.Decoder, for: GoogleApi.BusinessMessages.V1.Model.BusinessMessagesSuggestion do
  def decode(value, options) do
    GoogleApi.BusinessMessages.V1.Model.BusinessMessagesSuggestion.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BusinessMessages.V1.Model.BusinessMessagesSuggestion do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
