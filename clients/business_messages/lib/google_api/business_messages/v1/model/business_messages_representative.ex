# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.BusinessMessages.V1.Model.BusinessMessagesRepresentative do
  @moduledoc """
  Details about the representative (human or chatbot) that sent the message.

  ## Attributes

  *   `avatarImage` (*type:* `String.t`, *default:* `nil`) - Optional. The representative's avatar image, as a publicly available URL. Displays as a circle. Avatar images don't support personal information, such as depictions of representatives in photographs or illustrations. Use images that don't identify individuals, such as icons, logos, or fictitious illustrations. After an avatar image is used in a message, the image can't be modified or deleted. Images must be 1024x1024 px and have a maximum files size of 50 KB.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - Optional. Name of the representative.
  *   `representativeType` (*type:* `String.t`, *default:* `nil`) - Required. The type of representative.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :avatarImage => String.t() | nil,
          :displayName => String.t() | nil,
          :representativeType => String.t() | nil
        }

  field(:avatarImage)
  field(:displayName)
  field(:representativeType)
end

defimpl Poison.Decoder, for: GoogleApi.BusinessMessages.V1.Model.BusinessMessagesRepresentative do
  def decode(value, options) do
    GoogleApi.BusinessMessages.V1.Model.BusinessMessagesRepresentative.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.BusinessMessages.V1.Model.BusinessMessagesRepresentative do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
