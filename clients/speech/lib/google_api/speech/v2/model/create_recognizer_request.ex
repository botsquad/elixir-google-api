# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Speech.V2.Model.CreateRecognizerRequest do
  @moduledoc """
  Request message for the CreateRecognizer method.

  ## Attributes

  *   `parent` (*type:* `String.t`, *default:* `nil`) - Required. The project and location where this Recognizer will be created. The expected format is `projects/{project}/locations/{location}`.
  *   `recognizer` (*type:* `GoogleApi.Speech.V2.Model.Recognizer.t`, *default:* `nil`) - Required. The Recognizer to create.
  *   `recognizerId` (*type:* `String.t`, *default:* `nil`) - The ID to use for the Recognizer, which will become the final component of the Recognizer's resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
  *   `validateOnly` (*type:* `boolean()`, *default:* `nil`) - If set, validate the request and preview the Recognizer, but do not actually create it.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :parent => String.t() | nil,
          :recognizer => GoogleApi.Speech.V2.Model.Recognizer.t() | nil,
          :recognizerId => String.t() | nil,
          :validateOnly => boolean() | nil
        }

  field(:parent)
  field(:recognizer, as: GoogleApi.Speech.V2.Model.Recognizer)
  field(:recognizerId)
  field(:validateOnly)
end

defimpl Poison.Decoder, for: GoogleApi.Speech.V2.Model.CreateRecognizerRequest do
  def decode(value, options) do
    GoogleApi.Speech.V2.Model.CreateRecognizerRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Speech.V2.Model.CreateRecognizerRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
