# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Speech.V2.Model.BatchRecognizeFileMetadata do
  @moduledoc """
  Metadata about a single file in a batch for BatchRecognize.

  ## Attributes

  *   `config` (*type:* `GoogleApi.Speech.V2.Model.RecognitionConfig.t`, *default:* `nil`) - Features and audio metadata to use for the Automatic Speech Recognition. This field in combination with the config_mask field can be used to override parts of the default_recognition_config of the Recognizer resource as well as the config at the request level.
  *   `configMask` (*type:* `String.t`, *default:* `nil`) - The list of fields in config that override the values in the default_recognition_config of the recognizer during this recognition request. If no mask is provided, all non-default valued fields in config override the values in the recognizer for this recognition request. If a mask is provided, only the fields listed in the mask override the config in the recognizer for this recognition request. If a wildcard (`*`) is provided, config completely overrides and replaces the config in the recognizer for this recognition request.
  *   `uri` (*type:* `String.t`, *default:* `nil`) - Cloud Storage URI for the audio file.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :config => GoogleApi.Speech.V2.Model.RecognitionConfig.t() | nil,
          :configMask => String.t() | nil,
          :uri => String.t() | nil
        }

  field(:config, as: GoogleApi.Speech.V2.Model.RecognitionConfig)
  field(:configMask)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.Speech.V2.Model.BatchRecognizeFileMetadata do
  def decode(value, options) do
    GoogleApi.Speech.V2.Model.BatchRecognizeFileMetadata.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Speech.V2.Model.BatchRecognizeFileMetadata do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
