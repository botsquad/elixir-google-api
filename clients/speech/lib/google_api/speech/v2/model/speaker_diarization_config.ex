# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Speech.V2.Model.SpeakerDiarizationConfig do
  @moduledoc """
  Configuration to enable speaker diarization.

  ## Attributes

  *   `maxSpeakerCount` (*type:* `integer()`, *default:* `nil`) - Required. Maximum number of speakers in the conversation. Valid values are: 1-6. Must be >= `min_speaker_count`. This range gives you more flexibility by allowing the system to automatically determine the correct number of speakers.
  *   `minSpeakerCount` (*type:* `integer()`, *default:* `nil`) - Required. Minimum number of speakers in the conversation. This range gives you more flexibility by allowing the system to automatically determine the correct number of speakers. To fix the number of speakers detected in the audio, set `min_speaker_count` = `max_speaker_count`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :maxSpeakerCount => integer() | nil,
          :minSpeakerCount => integer() | nil
        }

  field(:maxSpeakerCount)
  field(:minSpeakerCount)
end

defimpl Poison.Decoder, for: GoogleApi.Speech.V2.Model.SpeakerDiarizationConfig do
  def decode(value, options) do
    GoogleApi.Speech.V2.Model.SpeakerDiarizationConfig.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Speech.V2.Model.SpeakerDiarizationConfig do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
