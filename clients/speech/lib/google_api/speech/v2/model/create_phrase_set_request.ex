# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Speech.V2.Model.CreatePhraseSetRequest do
  @moduledoc """
  Request message for the CreatePhraseSet method.

  ## Attributes
  
  *   `parent` (*type:* `String.t`, *default:* `nil`) - Required. The project and location where this PhraseSet will be created. The expected format is `projects/{project}/locations/{location}`.
  *   `phraseSet` (*type:* `GoogleApi.Speech.V2.Model.PhraseSet.t`, *default:* `nil`) - Required. The PhraseSet to create.
  *   `phraseSetId` (*type:* `String.t`, *default:* `nil`) - The ID to use for the PhraseSet, which will become the final component of the PhraseSet's resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
  *   `validateOnly` (*type:* `boolean()`, *default:* `nil`) - If set, validate the request and preview the PhraseSet, but do not actually create it.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
    
      :"parent" => String.t | nil,
    
      :"phraseSet" => GoogleApi.Speech.V2.Model.PhraseSet.t | nil,
    
      :"phraseSetId" => String.t | nil,
    
      :"validateOnly" => boolean() | nil,
    
  }
  
  field(:"parent")
  field(:"phraseSet", as: GoogleApi.Speech.V2.Model.PhraseSet)
  field(:"phraseSetId")
  field(:"validateOnly")
end

defimpl Poison.Decoder, for: GoogleApi.Speech.V2.Model.CreatePhraseSetRequest do
  def decode(value, options) do
    GoogleApi.Speech.V2.Model.CreatePhraseSetRequest.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Speech.V2.Model.CreatePhraseSetRequest do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
