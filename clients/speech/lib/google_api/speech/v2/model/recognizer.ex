# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Speech.V2.Model.Recognizer do
  @moduledoc """
  A Recognizer message. Stores recognition configuration and metadata.

  ## Attributes

  *   `annotations` (*type:* `map()`, *default:* `nil`) - Allows users to store small amounts of arbitrary data. Both the key and the value must be 63 characters or less each. At most 100 annotations.
  *   `createTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. Creation time.
  *   `defaultRecognitionConfig` (*type:* `GoogleApi.Speech.V2.Model.RecognitionConfig.t`, *default:* `nil`) - Default configuration to use for requests with this Recognizer. This can be overwritten by inline configuration in the RecognizeRequest.config field.
  *   `deleteTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which this Recognizer was requested for deletion.
  *   `displayName` (*type:* `String.t`, *default:* `nil`) - User-settable, human-readable name for the Recognizer. Must be 63 characters or less.
  *   `etag` (*type:* `String.t`, *default:* `nil`) - Output only. This checksum is computed by the server based on the value of other fields. This may be sent on update, undelete, and delete requests to ensure the client has an up-to-date value before proceeding.
  *   `expireTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The time at which this Recognizer will be purged.
  *   `kmsKeyName` (*type:* `String.t`, *default:* `nil`) - Output only. The [KMS key name](https://cloud.google.com/kms/docs/resource-hierarchy#keys) with which the Recognizer is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}`.
  *   `kmsKeyVersionName` (*type:* `String.t`, *default:* `nil`) - Output only. The [KMS key version name](https://cloud.google.com/kms/docs/resource-hierarchy#key_versions) with which the Recognizer is encrypted. The expected format is `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}`.
  *   `languageCodes` (*type:* `list(String.t)`, *default:* `nil`) - Optional. This field is now deprecated. Prefer the `language_codes` field in the `RecognitionConfig` message. The language of the supplied audio as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Supported languages for each model are listed in the [Table of Supported Models](https://cloud.google.com/speech-to-text/v2/docs/speech-to-text-supported-languages). If additional languages are provided, recognition result will contain recognition in the most likely language detected. The recognition result will include the language tag of the language detected in the audio. When you create or update a Recognizer, these values are stored in normalized BCP-47 form. For example, "en-us" is stored as "en-US".
  *   `model` (*type:* `String.t`, *default:* `nil`) - Optional. This field is now deprecated. Prefer the `model` field in the `RecognitionConfig` message. Which model to use for recognition requests. Select the model best suited to your domain to get best results. Guidance for choosing which model to use can be found in the [Transcription Models Documentation](https://cloud.google.com/speech-to-text/v2/docs/transcription-model) and the models supported in each region can be found in the [Table Of Supported Models](https://cloud.google.com/speech-to-text/v2/docs/speech-to-text-supported-languages).
  *   `name` (*type:* `String.t`, *default:* `nil`) - Output only. The resource name of the Recognizer. Format: `projects/{project}/locations/{location}/recognizers/{recognizer}`.
  *   `reconciling` (*type:* `boolean()`, *default:* `nil`) - Output only. Whether or not this Recognizer is in the process of being updated.
  *   `state` (*type:* `String.t`, *default:* `nil`) - Output only. The Recognizer lifecycle state.
  *   `uid` (*type:* `String.t`, *default:* `nil`) - Output only. System-assigned unique identifier for the Recognizer.
  *   `updateTime` (*type:* `DateTime.t`, *default:* `nil`) - Output only. The most recent time this Recognizer was modified.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :annotations => map() | nil,
          :createTime => DateTime.t() | nil,
          :defaultRecognitionConfig => GoogleApi.Speech.V2.Model.RecognitionConfig.t() | nil,
          :deleteTime => DateTime.t() | nil,
          :displayName => String.t() | nil,
          :etag => String.t() | nil,
          :expireTime => DateTime.t() | nil,
          :kmsKeyName => String.t() | nil,
          :kmsKeyVersionName => String.t() | nil,
          :languageCodes => list(String.t()) | nil,
          :model => String.t() | nil,
          :name => String.t() | nil,
          :reconciling => boolean() | nil,
          :state => String.t() | nil,
          :uid => String.t() | nil,
          :updateTime => DateTime.t() | nil
        }

  field(:annotations, type: :map)
  field(:createTime, as: DateTime)
  field(:defaultRecognitionConfig, as: GoogleApi.Speech.V2.Model.RecognitionConfig)
  field(:deleteTime, as: DateTime)
  field(:displayName)
  field(:etag)
  field(:expireTime, as: DateTime)
  field(:kmsKeyName)
  field(:kmsKeyVersionName)
  field(:languageCodes, type: :list)
  field(:model)
  field(:name)
  field(:reconciling)
  field(:state)
  field(:uid)
  field(:updateTime, as: DateTime)
end

defimpl Poison.Decoder, for: GoogleApi.Speech.V2.Model.Recognizer do
  def decode(value, options) do
    GoogleApi.Speech.V2.Model.Recognizer.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Speech.V2.Model.Recognizer do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
