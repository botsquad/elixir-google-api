# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This file is auto generated by the elixir code generator program.
# Do not edit this file manually.

defmodule GoogleApi.Speech.V1p1beta1.Model.TranscriptNormalization do
  @moduledoc """
  Transcription normalization configuration. Use transcription normalization to automatically replace parts of the transcript with phrases of your choosing. For StreamingRecognize, this normalization only applies to stable partial transcripts (stability > 0.8) and final transcripts.

  ## Attributes

  *   `entries` (*type:* `list(GoogleApi.Speech.V1p1beta1.Model.Entry.t)`, *default:* `nil`) - A list of replacement entries. We will perform replacement with one entry at a time. For example, the second entry in ["cat" => "dog", "mountain cat" => "mountain dog"] will never be applied because we will always process the first entry before it. At most 100 entries.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :entries => list(GoogleApi.Speech.V1p1beta1.Model.Entry.t()) | nil
        }

  field(:entries, as: GoogleApi.Speech.V1p1beta1.Model.Entry, type: :list)
end

defimpl Poison.Decoder, for: GoogleApi.Speech.V1p1beta1.Model.TranscriptNormalization do
  def decode(value, options) do
    GoogleApi.Speech.V1p1beta1.Model.TranscriptNormalization.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Speech.V1p1beta1.Model.TranscriptNormalization do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
